<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Fault Tolerance on Segundo Cerebro</title><link>https://lyrad913.github.io/tags/fault-tolerance/</link><description>Recent content in Fault Tolerance on Segundo Cerebro</description><generator>Hugo</generator><language>ko-kr</language><copyright>[© CC BY 4.0](https://creativecommons.org/licenses/by/4.0/legalcode)</copyright><lastBuildDate>Sun, 19 Oct 2025 23:10:20 +0900</lastBuildDate><atom:link href="https://lyrad913.github.io/tags/fault-tolerance/index.xml" rel="self" type="application/rss+xml"/><item><title>Impossibility of Distributed Consensus with One Faulty Process</title><link>https://lyrad913.github.io/posts/paper/fischerImpossibilityDistributedConsensuswith/</link><pubDate>Mon, 13 Oct 2025 11:40:25 +0000</pubDate><guid>https://lyrad913.github.io/posts/paper/fischerImpossibilityDistributedConsensuswith/</guid><description>&lt;link rel="stylesheet" href="https://lyrad913.github.io/katex/katex.min.css" /&gt;&lt;script defer src="https://lyrad913.github.io/katex/katex.min.js"&gt;&lt;/script&gt;&lt;script defer src="https://lyrad913.github.io/katex/auto-render.min.js" onload="renderMathInElement(document.body, {&amp;#34;delimiters&amp;#34;:[{&amp;#34;left&amp;#34;:&amp;#34;$&amp;#34;,&amp;#34;right&amp;#34;:&amp;#34;$&amp;#34;,&amp;#34;display&amp;#34;:false},{&amp;#34;left&amp;#34;:&amp;#34;$$&amp;#34;,&amp;#34;right&amp;#34;:&amp;#34;$$&amp;#34;,&amp;#34;display&amp;#34;:true},{&amp;#34;left&amp;#34;:&amp;#34;\\(&amp;#34;,&amp;#34;right&amp;#34;:&amp;#34;\\)&amp;#34;,&amp;#34;display&amp;#34;:false},{&amp;#34;left&amp;#34;:&amp;#34;\\[&amp;#34;,&amp;#34;right&amp;#34;:&amp;#34;\\]&amp;#34;,&amp;#34;display&amp;#34;:true}]});"&gt;&lt;/script&gt;
&lt;details open=""&gt;&lt;summary&gt;Abstract&lt;/summary&gt;&lt;div class="markdown-inner"&gt;
&lt;p&gt;합의 문제는 일부가 신뢰할 수 없을 수 있는 비동기적 프로세스 시스템을 포함함. 본 논문에서의 문제는 신뢰할 수 있는 프로세스들의 이진 값 합의가 되겠다. 본 논문에서는 이 문제를 해결하기 위한 그 어떤 프로토콜이더라도, 단 하나의 결함 있는 프로세스가 있을 경우 종료되지 않을 수 있음을 보인다. 이에 반해 동기적인 경우(즉, Byzantine Generals)의 경우에는 해결할 수 있음이 알려져 있다.&lt;/p&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;h2 id="1-introduction"&gt;1. Introduction&lt;a class="anchor" href="#1-introduction"&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;원격 프로세스간의 동의에 이르는 것이 분산 컴퓨팅에서의 핵심 문제이자, 분산 데이터 처리, 분산 파일 관리, 분산 어플리케이션의 장애 내성 등의 많은 알고리즘의 핵심이 된다.&lt;/p&gt;</description></item></channel></rss>